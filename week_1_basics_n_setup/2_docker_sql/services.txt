services:
    postgres:
      image: postgres:13
      environment:
        POSTGRES_USER: airflow
        POSTGRES_PASSWORD: airflow
        POSTGRES_DB: airflow
      volumes:
        - postgres-db-volume:/var/lib/postgresql/data 
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "airflow"]
        interval: 5s
        retries: 5
      restart: always
  
  To run postgres in docker
  For bash/Linux
  docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data:z \
    -p 5432:5432 \
    postgres:13  

    For window OS  
    docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v C:\\Users\\HP\\Desktop\\data-engineering-zoomcamp\\week_1_basics_n_setup\\2_docker_sql\\ny_taxi_postgres_data://var/lib//postgresql//data \
    -p 5431:5432 \
    postgres:13 

  # login to your running database using pgcli
  pgcli -h localhost -p 5431 -u root -d ny_taxi

  some command line to read csv file
  head -n 100 $filename.csv
  less $filename.csv
  wc -l $filename.csv count line
   
  To run pgadmin in docker

    docker run -it \
      -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
      -e PGADMIN_DEFAULT_PASSWORD="root" \
      -p 8080:80 \
      dpage/pgadmin4

  ## Network
docker network create pg-network
  docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data:z \
    -p 5431:5432 \
    --network=pg-network \
    --name pg-database \
    postgres:13 

      docker run -it \
      -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
      -e PGADMIN_DEFAULT_PASSWORD="root" \
      -p 8080:80 \
      --network=pg-network \
      --name pgadmin \
      dpage/pgadmin4


 
URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz"

URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-01.csv.gz"

python ingest_data.py \
  --user=root \ 
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=ny_taxi \
  --table_name=yellow_taxi_trips \
  --url=${URL}

  python green_taxi_ingest_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5431 \
  --db=ny_taxi \
  --table_name=green_taxi_trips \
  --url=${URL}

docker built -t taxi_ingest:v001


Run the Container
docker run -it \
--network=pg-network \
taxi_ingest:v001 \
  --user=root \
  --password=root \
  --host=pg-database \
  --port=5432 \
  --db=ny_taxi \
  --table_name=yellow_taxi_trips \
  --url=${URL}

Start the container Container
docker start-i \
--network=pg-network \
taxi_ingest:v001 \
  --user=root \
  --password=root \
  --host=pg-database \
  --port=5432 \
  --db=ny_taxi \
  --table_name=yellow_taxi_trips \
  --url=${URL}


  Connecting to google cloud vm
  go to the documentation
  https://cloud.google.com/compute/docs/connect/create-ssh-keys#linux-and-macos
  using ssh
  $ ssh-keygen -t rsa -f ~/.ssh/gcp -C sammygis -b 2048

  Run the Container

  I will be runign thsi suisng the docker compose, all i need to do is to
  check the netowrk the compose   is runing on and the name of the host it automatically created
  athen add it to this cript so that once i run docker compose eeryhting is filename
docker run -it \
--network=2_docker_sql_pg-network  \
ingest:v1 \
  --user=root \
  --password=root \
  --host=2_docker_sql-pgdatabase-1 \
  --port=5432 \
  --db=ny_taxi \
  --table_name=yellow_taxi_trips \
  --url=${URL}


pgcli -h 2_docker_sql-pgdatabase-1 -p 5431 -u root -d ny_taxi